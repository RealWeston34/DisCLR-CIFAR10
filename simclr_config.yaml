hydra:
  job_logging:
#    formatters:
#      simple:
#        format: '[]'
    root:
      handlers: [file, console]  # logging to file only.
  run:
    #dir: logs/${dataset}
    dir: logs/SimCLR/${dataset}


dataset: cifar10
data_dir: data

# model
backbone: resnet18 # or resnet34, resnet50
projection_dim: 512 # "[...] to project the representation to a 128-dimensional latent space"

# train options

seed: 42 # sacred handles automatic seeding when passed in the config
batch_size: 512
workers: 16
epochs: 100
log_interval: 10


# loss options
optimizer: 'sgd' # or LARS (experimental)
learning_rate: 0.6 # initial lr = 0.3 * batch_size / 256
momentum: 0.9
weight_decay: 1.0e-6 # "optimized using LARS [...] and weight decay of 10âˆ’6"
temperature: 0.5 # see appendix B.7.: Optimal temperature under different batch sizes


# finetune options
finetune_epochs: 100 #100
load_path: './models/simclr_resnet18_dim512_epoch100.pt' # checkpoint for finetune

# save_reprs options
reprs_batch_size: 1024
gpu: 0
exp_id: 1
extra_info: null
reprs_workers: 12
reprs_seed: null
reprs_epochs: 1
reprs_data: ./data/cifar-10-batches-py
reprs_pretrained: ./simclr_resnet18_epoch100.pt
reprs_dataset: 'cifar10_train'
repr_size: 0
start_epoch: 0

# test collapse options
collapse_pretrained: data/resnet18_exp0001/cifar10/train_reprs_e0_64.pt
type: svd
normalize: False
